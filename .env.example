# Moments Application Environment Configuration
# Copy this file to .env.local and fill in your actual values

# ===========================================
# ANTHROPIC API CONFIGURATION
# ===========================================

# Client-side API key (exposed to browser - development only)
# WARNING: Using NEXT_PUBLIC_ prefix exposes this API key to the browser client-side
# This is only for development purposes. In production, API calls should be server-side.
NEXT_PUBLIC_ANTHROPIC_API_KEY=sk-ant-api03-your-anthropic-api-key-here

# Server-side API key (for future server-side API routes)
ANTHROPIC_API_KEY=sk-ant-api03-your-anthropic-api-key-here

# Optional: Custom Anthropic API base URL
# ANTHROPIC_BASE_URL=https://api.anthropic.com

# ===========================================
# AWS BEDROCK CONFIGURATION
# ===========================================

# AWS Region for Bedrock (required)
AWS_REGION=us-east-1

# Method 1: AWS Access Keys (Environment Variables)
# Use for explicit credential configuration
AWS_ACCESS_KEY_ID=your-aws-access-key-id
AWS_SECRET_ACCESS_KEY=your-aws-secret-access-key
# Optional session token for temporary credentials
# AWS_SESSION_TOKEN=your-aws-session-token

# Method 2: Bedrock API Keys (New Authentication Method)
# Alternative authentication for Bedrock without full AWS credentials
BEDROCK_API_KEY=your-bedrock-api-key

# Method 3: AWS CLI Profile
# Specify profile name from ~/.aws/credentials
# AWS_PROFILE=default

# Method 4: AWS SSO Configuration
# For organizations using AWS Single Sign-On
# AWS_SSO_START_URL=https://your-org.awsapps.com/start
# AWS_SSO_ACCOUNT_ID=123456789012
# AWS_SSO_ROLE_NAME=YourRoleName
# AWS_SSO_REGION=us-east-1
# AWS_SSO_SESSION=your-sso-session

# Method 5: IAM Role Assumption
# For assuming roles across accounts or for elevated permissions
# AWS_ROLE_ARN=arn:aws:iam::123456789012:role/BedrockAccessRole
# AWS_ROLE_SESSION_NAME=bedrock-auth-session
# AWS_EXTERNAL_ID=your-external-id

# ===========================================
# MODEL PROVIDER CONFIGURATION
# ===========================================

# Force specific provider (overrides config.yml)
# MOMENTS_PROVIDER_OVERRIDE=bedrock
# MOMENTS_PROVIDER_OVERRIDE=anthropic

# Bedrock-specific environment overrides
# CLAUDE_CODE_USE_BEDROCK=1
# CLAUDE_CODE_MAX_OUTPUT_TOKENS=4096
# MAX_THINKING_TOKENS=1024

# Cross-region inference profile (Bedrock optimization)
# AWS_BEDROCK_INFERENCE_PROFILE=arn:aws:bedrock:us-east-1:123456789012:inference-profile/your-profile

# ===========================================
# AUTHENTICATION PREFERENCES
# ===========================================

# Preferred authentication method for Bedrock
# Options: auto, cli, env, sso, api_key, role
# BEDROCK_AUTH_METHOD=auto

# Custom credentials file path (if not using default ~/.aws/credentials)
# AWS_CREDENTIALS_FILE=/path/to/your/credentials

# ===========================================
# DEVELOPMENT CONFIGURATION
# ===========================================

# Enable debug logging for authentication
# DEBUG_AUTH=true

# Skip authentication validation (development only)
# SKIP_AUTH_VALIDATION=false

# ===========================================
# SECURITY NOTES
# ===========================================

# IMPORTANT SECURITY CONSIDERATIONS:
# 1. Never commit actual API keys or credentials to version control
# 2. Use NEXT_PUBLIC_ prefix only for development, never in production
# 3. For production, implement server-side API routes for AI model calls
# 4. Consider using AWS IAM roles instead of long-term access keys
# 5. Regularly rotate API keys and access credentials
# 6. Use environment-specific configuration for different deployment stages
# 7. Enable CloudTrail logging for AWS API calls in production
# 8. Use AWS Secrets Manager or similar for credential management in production

# ===========================================
# CONFIGURATION EXAMPLES BY USE CASE
# ===========================================

# Example 1: Local Development with Anthropic API
# NEXT_PUBLIC_ANTHROPIC_API_KEY=sk-ant-api03-...
# AWS_REGION=us-east-1

# Example 2: Local Development with Bedrock API Keys
# BEDROCK_API_KEY=your-bedrock-api-key
# AWS_REGION=us-east-1

# Example 3: Production with AWS IAM Role
# AWS_REGION=us-east-1
# AWS_ROLE_ARN=arn:aws:iam::123456789012:role/ProductionBedrockRole
# BEDROCK_AUTH_METHOD=role

# Example 4: Enterprise with AWS SSO
# AWS_REGION=us-east-1
# AWS_SSO_START_URL=https://company.awsapps.com/start
# AWS_SSO_ACCOUNT_ID=123456789012
# AWS_SSO_ROLE_NAME=BedrockUserRole
# BEDROCK_AUTH_METHOD=sso

# Example 5: CI/CD with Environment Variables
# AWS_REGION=us-east-1
# AWS_ACCESS_KEY_ID=AKIA...
# AWS_SECRET_ACCESS_KEY=...
# BEDROCK_AUTH_METHOD=env